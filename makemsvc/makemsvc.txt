how to build windows binaries using command line
**************************************************************************
general:

1. Visual Studio Express 2019 for Windows Desktop with clang support

2. examples assume gitdev\jsource is the jsource folder

3. jbld hardwired as build folder

4. create jbld folder
...> gitdev\jsource\makemsvc\install.bat gitdev

5. edit jsrc\jversion.h as appropriate for 9!:14 result
jsrc\jversion-x.h is template for this file

6. copy binaries to release folder
...>release.bat

**************************************************************************
j64

0. from the windows start menu bar, choose
x64 Native Tools Command Prompt for VS 2019
and then cd to the makemsvc folder

1. build jconsole.exe
cd jconsole
nmake -f makefile.win CC=clang-cl x64=1 clean
nmake -f makefile.win CC=clang-cl x64=1
cd ..

2. build j.dll
same as for jconsole but cd into jdll. add JAVX or JAVX2 and OpenMP flag as needed
cd jdll
nmake -f makefile.win CC=clang-cl x64=1 JAVX2=1 USE_OPENMP=1 clean
nmake -f makefile.win CC=clang-cl x64=1 JAVX2=1 USE_OPENMP=1
nmake -f makefile.win CC=clang-cl x64=1 JAVX=1 USE_OPENMP=1 clean
nmake -f makefile.win CC=clang-cl x64=1 JAVX=1 USE_OPENMP=1
nmake -f makefile.win CC=clang-cl x64=1 USE_OPENMP=1 clean
nmake -f makefile.win CC=clang-cl x64=1 USE_OPENMP=1
cd ..

3. build tsdll.dll -  used in test suite to validate cd
same as for jconsole but cd into tsdll

4. run test suite
copy jconsole.exe to jbld\j64\bin\jconsole.exe
similarly for j.dll and tsdll.dll

start powershell
...>jbld\j64\bin\jconsole.exe
   i.5
   9!:14''
...
   testpath=:'gitdev/jsource/test/'
   load testpath,'tsu.ijs'
   RUN ddall NB. takes a few minutes to validate system and report problems

**************************************************************************
j32

0. from the windows start menu bar, choose
x86 Native Tools Command Prompt for VS 2019
and then cd to the makemsvc folder

1. build jconsole.exe
cd jconsole
nmake -f makefile.win CC=clang-cl clean
nmake -f makefile.win CC=clang-cl
cd ..

2. build j.dll
same as for jconsole but cd into jdll

3. build tsdll.dll -  used in test suite to validate cd
same as for jconsole but cd into tsdll

4. run test suite
copy jconsole32.exe to jbld\j32\bin\jconsole.exe
similarly for j32.dll and tsdll32.dll

start powershell
...>jbld\j32\bin\jconsole.exe
   i.5
   9!:14''
...
   testpath=:'gitdev/jsource/test/'
   load testpath,'tsu.ijs'
   RUN ddall NB. takes a few minutes to validate system and report problems
